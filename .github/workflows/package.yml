# description of this workflow, can be anything you want
name: Package with Artifacts

# we need to let GitHub know _when_ we want to release, typically only when we create a new tag.
# this will target only tags, and not all pushes to the master branch.
# this part can be heavily customized to your liking, like targeting only tags that match a certain word,
# other branches or even pullrequests.

# this will only fire if the action is present on both the master branch and the child branch (I think?)
# https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows#example-using-multiple-events-with-activity-types-or-configuration
# Workflows don't show up in the action list until they have been run once

on:
  push:
    branches-ignore:
      - master
    tags-ignore:
      - v[0-9]+.[0-9]+*

# a workflow is built up as jobs, and within these jobs are steps
jobs:

  # "release" is a job, you can name it anything you want
  release:

    # we can run our steps on pretty much anything, but the "ubuntu-latest" image is a safe bet
    runs-on: ubuntu-latest

    steps:

      # we first have to clone the AddOn project, this is a required step
      - name: Clone Project
        uses: actions/checkout@v1
        with:
          # you can specify how much of the commit history you want to fetch,
          # which is useful for controlling the length of the automated changelog
          fetch-depth: 50

      # once cloned, we just run the GitHub Action for the packager project
      - name: Package and Release
        uses: BigWigsMods/packager@master
        with:
          args: -d

      # another example where we supply additional arguments, this example is specifically to release
      # for the Classic version of the game
      # the -g arg releases with all cassic tags, and the -w arg changes the WOWI ID for classic only
      - name: Package and Release for Classic
        uses: BigWigsMods/packager@master
        with:
          args: -d -g classic -w 25252

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: builds
          path: .release/*.zip
